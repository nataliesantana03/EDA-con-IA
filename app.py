import streamlit as st
import pickle
import re
import random
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.neural_network import MLPClassifier

tweets = [
    "me siento triste y solo", "odio todo", "nada tiene sentido",
    "amo la vida", "qu√© d√≠a tan hermoso", "esto es incre√≠ble",
    "estoy llorando", "quiero desaparecer", "me rompieron el coraz√≥n",
    "gracias por tanto", "qu√© emoci√≥n", "vamos con todo", "estoy feliz", "logr√© mi meta"
]
labels = [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1]  

vectorizer = CountVectorizer()
X = vectorizer.fit_transform(tweets)
y = np.array(labels)

model = MLPClassifier(hidden_layer_sizes=(10,), max_iter=1000, random_state=42)
model.fit(X, y)

def clean_text(text):
    text = re.sub(r'@[A-Za-z0-9_]+', '', text)  
    text = re.sub(r'#', '', text)               
    text = re.sub(r'RT[\s]+', '', text)         
    text = re.sub(r'https?:\/\/\S+', '', text)   
    return text

def predict_tweet(text):
    text = clean_text(text)
    text_vectorized = vectorizer.transform([text])
    prediction = model.predict(text_vectorized)

    if prediction[0] == 1:
        reasons = [
            "‚úÖ Contiene palabras poderosas que generan engagement.",
            "‚úÖ Usa emociones que la gente suele compartir.",
            "‚úÖ Tiene buena estructura y es f√°cil de leer."
        ]
        return "üî• Viral", random.choice(reasons)
    else:
        reasons = [
            "‚ùå Falta emoci√≥n o llamado a la acci√≥n.",
            "‚ùå El texto es muy gen√©rico o poco atractivo.",
            "‚ùå Carece de palabras que impulsen interacci√≥n."
        ]
        return "üßä No Viral", random.choice(reasons)

st.set_page_config(page_title="Predicci√≥n de Tweets Virales", page_icon="‚ú®", layout="centered")

st.markdown("""
    <body>
<style>
    body {
        background-color: #0E1117;
    }
    .big-title {
        font-size:50px;
        color:#FF4B4B;
        text-align:center;
        font-weight:bold;
        margin-bottom:20px;
        
}
    </style>
    <div class="big-title">üîÆ Predicci√≥n de Tweets Virales</div>
    </body>

""", unsafe_allow_html=True)

st.write("Escribe tu tweet y predice si se volver√° *viral* o no. ¬°No subestimes tu poder de influencia! üöÄ")

tweet_input = st.text_area("‚úç Escribe tu tweet aqu√≠:")

if st.button("üîé Predecir"):
    if tweet_input.strip() == "":
        st.warning("‚ö† Por favor, escribe algo para predecir.")
    else:
        result, reason = predict_tweet(tweet_input)
        st.markdown(f"## üì¢ Resultado: *{result}*")
        st.info(f"üìã Raz√≥n:¬†{reason}")
        
        st.markdown("""
<style>
.x-button {
    margin-top: 2em;
    display: flex;
    justify-content: center;
}
.x-button a {
    background: black;
    color: white;
    text-decoration: none;
    padding: 12px 24px;
    border-radius: 30px;
    font-weight: bold;
    font-size: 16px;
    display: flex;
    align-items: center;
    gap: 10px;
    transition: all 0.3s ease;
}
.x-button a:hover {
    background: #1A1A1A;
}
.x-button img {
    height: 24px;
    width: 24px;
}
</style>

<div class="x-button">
    <a href="https://x.com/intent/tweet?text=%s" target="_blank">
        <img src="https://abs.twimg.com/favicons/twitter.2.ico" alt="X logo">
        Publica tu tweet
    </a>
</div>
""" % tweet_input, unsafe_allow_html=True)
